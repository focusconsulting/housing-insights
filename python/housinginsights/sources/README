SOURCES DIRECTORY
-----------------

This directory is to be used to store modules to access various external APIs.
To be compatible with data.sh, use the following conventions.

HOW DATA.SH WORKS
-----------------

data.sh expects the user to supplies at least 4
things when it is run:
1. Output Type [--outtype] 
2. Output File (optional) [--output, -o]
3. Api Module name
4. Api Method name

It then tries to import housinginsights.sources + whatever module you specified. 
For example if the api module name supplied by the user is "mar", then it tries to import
"housinginsights.sources.mar". It then looks for a class with the module name + "ApiConn"
as a suffix. In this case it would be "MarApiConn". It then calls whatever method the user specied
from that ApiConn class. Whatever parameters specified by the user with the --params argument
are split and passed as keyword arguments (**kwargs) to the function. The --outtype argument is added
as output_type, and --o or --output is added as output_file. Thus, each public function compatible with
data.sh needs to have as a minimum those two parameters (output_type and output_file). See the mar.py
file for an example.


STRUCTURE:
---------
( * is used to represent an important class)
/sources
    /base.py - - stores the base connection classes. Your module should use one of these
                  as its self.conn attribute. If you need authentication, inherit from BaseAPIConn
                  and extend the base class, but for open apis, it should be sufficient.
            
                * BaseApiConn -- base connection to use as the self.conn attribute for your api module.

   /mar.py - - an example api module. Inside should be a class with the convention of the module name 
                (with first letter in caps) + ApiConn. So in this case it would be MarApiConn. This is the
                class that data.sh will try to import. 

                * MarApiConn -- API connection class import/used by data.sh. Each PUBLIC method should be available
                for use by data.sh. For example _read_to_csv is private and you should not expect a user to want to use
                it through data.sh.

